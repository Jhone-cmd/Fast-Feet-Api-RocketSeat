// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  deliveryman
}

enum Status {
  waiting
  withdrawal
  returned
  delivered
}

model Accounts {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  cpf      String @unique
  password String
  role     Role   @default(deliveryman)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  orders    Orders[]

  @@map("accounts")
}

model Recipients {
  id      String @id @default(uuid())
  name    String
  cpf     String @unique
  phone   String
  address String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  orders    Orders[]

  @@map("recipients")
}

model Orders {
  id        String  @id @default(uuid())
  name      String
  slug      String
  latitude  Decimal
  longitude Decimal

  status Status @default(waiting)

  deliveryman_id String?
  recipient_id   String

  deliveryman Accounts?  @relation(fields: [deliveryman_id], references: [id])
  recipient   Recipients @relation(fields: [recipient_id], references: [id])

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("orders")
}
